@model Entities.Servicios
@{
    // ViewBag.Title = "index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Titulo").IdiPal_Texto)</h4>
    </div>
</div>
<div class="row" id="Encabezado">
    <div class="col-lg-12">
        <div class="well well-sm overflowWell">
            <input type="hidden" value="@ViewBag.BuqViaCliSer_Id" name="buqViaCliSerId" id="buqViaCliSerId" />
            <div class="row">
                <div class="col-md-12">
                    <h5 class="text-info">
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tipo y Nombre").IdiPal_Texto):</small><span>@ViewBag.Tipo , @ViewBag.Nombre</span>
                        <br />
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Titulo").IdiPal_Texto):</small><span>@ViewBag.Codigo</span>
                        <br />
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Clientes - Titulo").IdiPal_Texto):</small><span>@ViewBag.NombreCompleto</span>
                        <br />
                    </h5>
                    @*window.location.href = '@Url.Action("Index")?tab=BuquesViajes&buqId=' + $('#buquesId').val() +"&id="+ results.msg;*@
                    <a class="btn btn-info btn-rounded volver" href="@Url.Action("Index","BuqueViajeCliente",new {tab = "Servicios"})&id=@ViewBag.BuqViaCLi_Id"><i class="fa fa-caret-left"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Volver").IdiPal_Texto)</a>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="Tripulantes">

    <div class="col-lg-6">
        <div class="panel panel-default">
            <div class="panel-body">
                @if (ViewBag.Alta == true)
                {
                    <input type="text" class="form-control input-sm" id="tripulantes" name="tripulantes" />
                }
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" width="100%">
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        @switch ((string)ViewBag.Tipo)
        {
            case "TRASLADO":@Html.Action("_ServiciosDetallesTraslado"); break;
            case "ALOJAMIENTO": @Html.Action("_ServiciosDetallesAlojamiento"); break;
            case "COMIDAS": @Html.Action("_ServiciosDetallesComida"); break;
            case "ADMINISTRATIVOS": @Html.Action("_ServiciosDetallesAdministrativo"); break;
            case "EXTRAS": @Html.Action("_ServiciosDetallesExtra"); break;
            case "MEDICO": @Html.Action("_ServiciosDetallesMedico"); break;
        }
    </div>
</div>
@* Modals *@
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <div class="modal-body">
                @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Confirmar Eliminar").IdiPal_Texto)
            </div>
            <div class="modal-footer">
                @if (ViewBag.Alta == true)
                {
                    <button type="button" class="btn btn-primary btn-rounded delete"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                }
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmFirma" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Firma").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label class="labelResult">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Fecha").IdiPal_Texto)</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label class="input-sm form-control" id="fechaFirma" name="fechaFirma"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="padding-top: 20px;">
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <div id="mapa" class="container" style="width: 100%">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <div class="col-lg-12" style="border: solid 1px;">
                                <img id="firma" src="" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmComida" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Detalles Comida - Comidas").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <form class="form-horizontal" id="formComidasAdicional" method="post">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label style="display: block;">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Detalles Comida - Adicional").IdiPal_Texto)</label>
                                    @if (ViewBag.Alta == true)
                                    {
                                        <input type="text" class="form-control input-sm" id="adicionales" name="adicionales" />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover" id="dataTablesAdicionales-example" width="100%"></table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDeleteAdicional" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <div class="modal-body">
                @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Confirmar Eliminar").IdiPal_Texto)
            </div>
            <div class="modal-footer">
                @if (ViewBag.Alta == true)
                {
                    <button type="button" class="btn btn-primary btn-rounded deleteAdicional"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                }
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>


<script>
    var id;
    var idAdicional;
    $(function () {
        $('#tripulantes').select2({ data: [] });

        function cargarTripulantes() {
            $.ajax({
                url: '@Url.Action("GetTripulantesDisponibles")',
                data: { id: $('#buqViaCliSerId').val() },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    $('#tripulantes').select2('data', null);
                    $('#tripulantes').select2('destroy').select2({
                        data: data.msg,
                        placeholder: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Titulo").IdiPal_Texto)'
                    });
                }
            });
        }
        cargarTripulantes();
        $('#tripulantes').on("change", function () {
            var sessionData = {
                //"Serv_Id": id,
                "BuqViaCliSer_Id": $("#buqViaCliSerId").val(),
                "BuqViaCliTri_Id": $("#tripulantes").select2('val'),
            };
            $.ajax({
                url: '@Url.Action("Servicios")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {

                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        $('#tripulantes').select2('data', null);
                        cargarTripulantes();
                        generarTabla();
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('body').off('click', '.borrarRegistro').on('click', '.borrarRegistro', function () {
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = aData.id;
            $(this).parent().parent().find('td').css('background-color', 'red');

        });


        $('body').off('click', '.delete').on('click', '.delete', function () {
            $.ajax({
                url: '@Url.Action("ServiciosDelete")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Eliminar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        $('#confirmEdit, #confirmDelete, #confirmVerificar, #confirmDeleteAdicional, #confirmComida').modal('hide');
                        id = null;
                        cargarTripulantes();
                        generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                },
                type: "POST"
            });
        });



        $('#confirmEdit, #confirmDelete, #confirmVerificar, #confirmDeleteAdicional, #confirmComida').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
            if (id == null)
                generarTabla();
        });

        generarTabla();


         function generarTabla() {
            $('#dataTables-example').dataTable({
                "stateSave":true,
                //"scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("BuscadorTripulantesGrilla")',
                    "data": { id: $("#buqViaCliSerId").val() },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "autoWidth": true,
                "ordering": false,
                "info": false,
                "paging": false,
                "bFilter":false,
                "columns": [
                    {
                        "data": "tripulantes",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Titulo").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="tripulanteGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "",
                        "class": "claseAlign",
                         "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            var algo = "";
                            if (full['observacion'] == "")
                                algo += '<button type="button" class="btn btn-danger btn-xs" ><span class="fa fa-times"></span></button>';
                            else
                                algo += '<button type="button" class="btn btn-success btn-xs " title="' + full['observacion'] + '" ><span class="fa fa-check"></span></button>';

                            return algo;
                        }
                    },
                    {
                        "data": "",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Acciones").IdiPal_Texto)',
                        "class": "claseAlign",
                        "render": function(data, type, full, meta) {
                            var botones = "";
                            botones += '<button type="button" class="btn btn-danger btn-xs borrarRegistro" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmDelete"><span class="fa fa-trash"></span></button>';
                            if (full['firma'] != "")
                                botones += '<button type="button" class="btn btn-info btn-xs firma" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Firma").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmFirma"><span class="fa fa-edit"></span></button>';
                            if ('@ViewBag.Tipo' == "COMIDAS")
                                botones += '<button type="button" class="btn btn-' + full['comida'] + ' btn-xs comida" title="Buques Viajes - Detalles Comida - Comidas" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmComida"><span class="fa fa-apple-alt"></span></button>';
                            return botones;
                        }
                    }
                ],
            });
            $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
         }

        $('body').off('click', '.firma').on('click', '.firma', function () {
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = aData.id;

            $(this).parent().parent().find('td').css('background-color', 'lightblue');
            $('#fechaFirma').text(aData.fechaFirma);
            $('#firma').attr('src',aData.firma);
            var latitud = aData.latitud;
            var longitud = aData.longitud;
            var src = "https://maps.google.com/maps?q=" + latitud + "," + longitud + "&hl=es&z=14&amp;output=embed";
            var iframe = '<iframe id="map" width="100%" height="400" src="' + src + '" height="600" frameborder="0" style="border:0" allowfullscreen></iframe>';
            $("#map").remove();
            $("#mapa").html(iframe);
        });


        $('body').off('click', '.comida').on('click', '.comida', function () {
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = aData.id;
            $(this).parent().parent().find('td').css('background-color', 'lightblue');
            cargarAdicionales();
            generarTablaAdicionales();
        });

        //---------------------------------
        //Detalles Comidas Adicionales Submit Registro
        //Validators
        //---------------------------------

        $('#adicionales').select2({ data: [] });

        function cargarAdicionales() {
            $.ajax({
                url: '@Url.Action("GetAdicionalesDisponibles")',
                data: { id: id },
                dataType: 'json',
                type: 'GET',
                success: function (data) {
                    $('#adicionales').select2('data', null);
                    $('#adicionales').select2('destroy').select2({
                        data: data.msg,
                        placeholder: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Detalles Comida - Adicional").IdiPal_Texto)'
                    });
                }
            });
        }

        $('#adicionales').on("change", function () {
            var sessionData = {
                "Serv_Id": id,
                "Clas_ComidaAdicional_Id": $("#adicionales").select2("val"),
                "BuqViaCliSer_Id": $("#buqViaCliSerId").val(),
            };
            $.ajax({
                url: '@Url.Action("_DetallesComidasAdicionales")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {

                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });
                        //generarTabla();
                        $('#adicionales').select2('data', null);
                        cargarAdicionales();
                        generarTablaAdicionales();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

          function generarTablaAdicionales() {
              $('#dataTablesAdicionales-example').dataTable({
                "responsive":true,
                "stateSave":true,
                //"scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("BuscadorAdicionalesGrilla")',
                    "data": { id: id },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "autoWidth": true,
                "ordering": false,
                "info": false,
                "paging": false,
                "bFilter":false,
                "columns": [
                    {
                        "data": "adicional",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Detalles Comida - Adicional").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="adicionalGrid">' + data + '</span>';
                        }
                    },

                    {
                        "data": "",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Acciones").IdiPal_Texto)',
                        "class": "claseAlign",
                        "render": function(data, type, full, meta) {
                            var botones = "";
                            botones += '<button type="button" class="btn btn-danger btn-xs borrarRegistroAdicional" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmDeleteAdicional"><span class="fa fa-trash"></span></button>';
                            return botones;
                        }
                    }
                ],
            });
            $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }


        $('body').off('click', '.borrarRegistroAdicional').on('click', '.borrarRegistroAdicional', function () {
            var table = $('#dataTablesAdicionales-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            idAdicional = aData.id;
            $(this).parent().parent().find('td').css('background-color', 'red');

        });
        $('body').off('click', '.deleteAdicional').on('click', '.deleteAdicional', function () {
            $.ajax({
                url: '@Url.Action("ServiciosDeleteAdicional")',
                data: { id: idAdicional },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Eliminar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        idAdicional = null;
                        cargarAdicionales();
                        generarTablaAdicionales();
                        //generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                },
                type: "POST"
            });
         });
    });

</script>
