@using BusinessLogic
@model Entities.Idiomas
@{
    ViewBag.Title = "Idioma";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Idioma").IdiPal_Texto): @Model.Clasificadores.ClasificadoresIdiomas.FirstOrDefault(i => i.Idi_Id == ((List<Entities.IdiomasPalabras>)HttpContext.Current.Session["Idiomas"]).FirstOrDefault().Idi_Id).ClasIdi_Texto</h4>
    </div>
</div>
<input type="hidden" id="hiddenIdioma" value="@Model.Idi_Id"/>
<div class="row">
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Herramienta").IdiPal_Texto)</label>
                                <select class="form-control input-sm"  id="herramientas">
                                    @foreach (var item in IdiomasPalabrasAdmin.GetListHerramientas())
                                    {
                                        if (ViewBag.Herramienta == item)
                                        {
                                            <option selected="selected" value="@item">@item</option>
                                        }
                                        else
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Seccion").IdiPal_Texto)</label>
                                <input type="text" style="width: 100% !important" class="form-control input-sm" id="secciones" name="secciones" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label style="display:block;">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Solo Vacios").IdiPal_Texto)</label>
                                <input type="checkbox" name="soloVacios" id="soloVacios" data-on-color="success" data-on-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - SI").IdiPal_Texto)" data-off-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - NO").IdiPal_Texto)" checked tabindex="">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" style="width: 100%;"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="pull-right btn-Cont">
    <button type="submit" class="btn btn-success" id="btnEdit" style="position: fixed;bottom: 5px;right: 0;"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
</div>
<script>

    var table;
    $(function() {

        function generarTabla() {
            $('#dataTables-example').dataTable({
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("IdiomasPalabrasGrilla")',
                    "data": { id: @Model.Idi_Id, herramienta: $('#herramientas').select2('val'), seccion: $('#secciones').select2('val'), soloVacios: $('[name="soloVacios"]').bootstrapSwitch('state') },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "paging":false,
                "autoWidth": true,
                "columns": [
                    { "data": "clave", "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Clave").IdiPal_Texto)',"width":"200px" },
                    {
                        "data": "texto", "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Texto").IdiPal_Texto)', "render": function (data, type, full, meta) {
                            return '<input type="text" id="txtTexto" class="form-control input-sm " autocomplete="off" name="txtTexto" value="' + data + '" style="width:96%;margin:0 6px;" />' +
                                '<input type="hidden" id="palabraId" value="' + full['id'] + '"/>' +
                                '<input type="hidden" id="hiddenTexto" value="' + data + '"/>';
                        }
                    },
                    { "data": "desc", "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Descripcion Palabra").IdiPal_Texto)' },
                ]
            });

            $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

        $("[name='soloVacios']").bootstrapSwitch();
        $("[name='soloVacios']").on('switchChange.bootstrapSwitch', function (event, state) {
            generarTabla();
        });
        $('#herramientas').select2();
        $('#secciones').select2({data:[]});
        $('#herramientas').on("change", function () {
            listaSecciones();
            generarTabla();
        });

        $('#secciones').on("change", function () {
            generarTabla();
        });

        function listaSecciones() {
            $.ajax({
                url: '@Url.Action("IdiomasSecciones", "Idiomas")',
                dataType: 'json',
                data: { herramienta: $('#herramientas').select2('val') },
                type: 'GET',
                async: false,
                success: function (data) {
                    $('#secciones').select2('destroy').select2({
                        data: data,placeholder: '- - -',allowClear:true
                    });
                }
            });
        }
        listaSecciones();

        $('body').off('click', '#btnEdit').on('click', '#btnEdit', function (e) {
            e.preventDefault();
            var presentacion = true;
            var items = [];
            //cargo solo los precios que hay que actualizar

            $("#dataTables-example tbody tr").each(function (index) {
                if ($(this).find("#txtTexto").val() == "") {
                    presentacion = false;
                    $(this).find("#txtTexto").focus();
                    return false;
                }

                if ($(this).find("#txtTexto").val() != $(this).find("#hiddenTexto").val()) {
                    items.push({
                        "IdiPal_Id": $(this).find("#palabraId").val(),
                        "IdiPal_Texto": $(this).find("#txtTexto").val(),
                    });
                }
            });

            if (presentacion != true) {
                new PNotify({
                    title: 'Error!',
                    text: "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Idiomas - Textos Incompletos").IdiPal_Texto)",
                    type: 'danger',
                    hide: true,
                    delay: 3000,
                    styling: 'bootstrap3',
                    animation: 'slide'
                });
                return false;
            }

            $.ajax({
                url: '@Url.Action("IdiomasPalabras")',
                type: 'POST',
                data: JSON.stringify(items),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        //recargar la grilla o actualizar
                        //generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        generarTabla();
    });
</script>