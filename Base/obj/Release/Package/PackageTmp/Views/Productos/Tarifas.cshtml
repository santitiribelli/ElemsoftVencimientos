@if (ViewBag.Alta == true)
{
    <div class="row">
        <div class="col-lg-12">
            <button type="button" class="btn btn-info  btn-block" id="btnAgregarForm"><i class="fa fa-plus"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Agregar").IdiPal_Texto)</button>
        </div>
    </div>
    <form class="form-horizontal rowAlt" role="form" id="formPrincipal" style="display: none;">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Proveedores - Titulo").IdiPal_Texto)</label>
                                <select type="text" class="form-control input-sm" name="proveedor" id="proveedor">
                                    <option></option>
                                    @foreach (var item in BusinessLogic.ProductosProveedoresAdmin.GetListProductosProveedoresByProdId(ViewBag.Prod_Id))
                                    {
                                        <option value="@item.ProdProv_Id">@item.Proveedores.Personas.NombreCompleto</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Fecha").IdiPal_Texto)</label>
                                <input type="text" class="input-sm form-control bfh-phone datepicker" autocomplete="off" data-format="dd/dd/dddd" id="fecha" name="fecha"/>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Costos").IdiPal_Texto)</label>
                                <input type="text" class="input-sm form-control" id="valor1" name="valor1" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Valor Mostrador").IdiPal_Texto)</label>
                                <input type="text" class="input-sm form-control" id="valor2" name="valor2" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Otros").IdiPal_Texto)</label>
                                <input type="text" class="input-sm form-control" id="valor3" name="valor3" />
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)</label>
                                <textarea rows="1" maxlength="500" class="input-sm form-control" id="observacion" name="observacion"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right btn-Cont">
                    <button type="submit" class="btn btn-success btn-rounded" id="btnGuardar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                </div>
            </div>
        </div>
    </form>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" style="min-width: 100%;"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)</h4>
            </div>
            <form class="form-horizontal" id="formEdit" method="post">
                <div class="modal-body rowAlt">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Proveedores - Titulo").IdiPal_Texto)</label>
                                    <select type="text" class="form-control input-sm" name="proveedorEdit" id="proveedorEdit" disabled>
                                        @foreach (var item in BusinessLogic.ProductosProveedoresAdmin.GetListByProducto(ViewBag.Prod_Id))
                                        {
                                            <option value="@item.ProdProv_Id">@item.Proveedores.Personas.NombreCompleto</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Fecha").IdiPal_Texto)</label>
                                    <input type="text" class="input-sm form-control bfh-phone datepicker" autocomplete="off" data-format="dd/dd/dddd" id="fechaEdit" name="fechaEdit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Costos").IdiPal_Texto)</label>
                                    <input type="text" class="input-sm form-control" id="valor1Edit" name="valor1Edit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Valor Mostrador").IdiPal_Texto)</label>
                                    <input type="text" class="input-sm form-control" id="valor2Edit" name="valor2Edit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Otros").IdiPal_Texto)</label>
                                    <input type="text" class="input-sm form-control" id="valor3Edit" name="valor3Edit" />
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)</label>
                                    <textarea rows="1" maxlength="500" class="input-sm form-control" id="observacionEdit" name="observacionEdit"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    @if (ViewBag.Alta == true)
                    {
                        <div class="pull-left btn-Cont">
                            <button type="button" class="btn btn-warning btn-rounded" id="btnVerificar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Verificar").IdiPal_Texto)</button>
                        </div>
                        <button type="submit" class="btn btn-primary btn-rounded" id="btnEditar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                        @*<button type="button" class="btn btn-danger btn-rounded borrarRegistro" title="Borrar" data-toggle="modal" data-target="#confirmDelete"><i class="fa fa-trash"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)</button>*@
                    }
                    <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmHistorico" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Historico").IdiPal_Texto): <b><span id="tituloSector"></span></b></h4>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered table-hover" id="dataTables-historico" style="width: 100%;"></table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id;
    $(function () {
        function generarTabla() {
            $('#dataTables-example').dataTable({
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("TarifasGrilla")',
                    "data": { id: $('#productoId').val() },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "autoWidth": true,
                "columns": [
                    {
                        "data": "proveedor",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Proveedores - Titulo").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            //return '<a class="linkFamiliar" href="/Proveedores/Index/' + full['proveedorId'] + '" id="parienteGrid">' + data + '</a><input type="hidden" id="hiddenProveedor" value="' + full['proveedorId'] + '"/>';
                            return '<span id="proveedorGrid">' + data + '</span><input type="hidden" id="hiddenProveedor" value="' + full['proveedorId'] + '"/><input type="hidden" id="hiddenProductosProveedores" value="' + full['id'] + '"/>';
                        }
                    },
                    {
                        "data": "codigo",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Proveedores - Proveedores - Codigo").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="codigoGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "activo",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Activo").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="activoGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "valor1",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Costos").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="valor1Grid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "valor2",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Valor Mostrador").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="valor2Grid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "valor3",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Otros").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="valor3Grid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "observacion",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="observacionGrid">' + data + '</span>';
                        }
                    },

                    {
                        "data": "",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Acciones").IdiPal_Texto)',
                        "class": "claseAlign",
                        "render": function (data, type, full, meta) {
                            var algo = "";
                            if ('@ViewBag.Alta' == 'True') {
                                algo += '<button type="button" class="btn ' + (full['verificados'] == true ? "btn-success" : "btn-warning") + ' btn-xs editarRegistro" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmEdit"><span class="glyphicon glyphicon-pencil"></span></button>';
                                //algo += '<button type="button" class="btn btn-success btn-xs preDelete" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmDelete"><span class="glyphicon glyphicon-trash"></span></button>';
                            }
                            algo += '<button type="button" class="btn btn-info btn-xs historico" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Historico").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmHistorico"><span class="glyphicon glyphicon-list-alt"></span></button>';
                            return algo;
                        }
                    }
                ],
            });

                $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

         $('#proveedor,#proveedorEdit').select2({});

        $('#formPrincipal').bootstrapValidator({
            submitButtons: '#btnGuardar',
            fields: {
                proveedor: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
                fecha: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        date: {
                            format: 'DD/MM/YYYY',
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                        }
                    }
                },
                valor1: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        numeric: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                    }
                },
                valor2: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        numeric: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                    }
                },
                valor3: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        numeric: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                    }
                },
            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            var sessionData = {
                "ProdProv_Id": $("#proveedor").select2('val'),
                "ProdProvTar_Fecha": $("#fecha").val(),
                "ProdProvTar_Valor1": parseCurrency($("#valor1").val()),
                "ProdProvTar_Valor2": parseCurrency($("#valor2").val()),
                "ProdProvTar_Valor3": parseCurrency($("#valor3").val()),
                "ProdProvTar_Obs":$("#observacion").val(),
            };
            $.ajax({
                url: '@Url.Action("Tarifas")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        $('#tabTarifas').removeClass('sinInfo text-info');
                        $('#tabTarifas i').remove();
                        $('#observacion,#fecha,#valor1,#valor2,#valor3').val('');
                        $('#proveedor').select2('data', null);
                        $('#formPrincipal').bootstrapValidator('resetForm');

                        generarTabla();
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('#formEdit')
            .bootstrapValidator({
                submitButtons: '#btnEditar',
                fields: {
                    proveedorEdit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                        }
                    },
                    fechaEdit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                            date: {
                                format: 'DD/MM/YYYY',
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                            }
                        }
                    },
                    valor1Edit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                            numeric: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                            },
                        }
                    },
                    valor2Edit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                            numeric: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                            },
                        }
                    },
                    valor3Edit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                            numeric: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                            },
                        }
                    },
                }
            }).on('success.form.bv', function (e) {
                e.preventDefault();
                var sessionData = {
                    "ProdProvTar_Id": id,
                    "ProdProv_Id": $("#proveedor").select2('val'),
                    "ProdProvTar_Fecha": $("#fechaEdit").val(),
                    "ProdProvTar_Valor1": parseCurrency($("#valor1Edit").val()),
                    "ProdProvTar_Valor2": parseCurrency($("#valor2Edit").val()),
                    "ProdProvTar_Valor3": parseCurrency($("#valor3Edit").val()),
                    "ProdProvTar_Obs": $("#observacionEdit").val(),
                };
                $.ajax({
                    url: '@Url.Action("Proveedores")',
                    type: 'POST',
                    data: JSON.stringify(sessionData),
                    contentType: "application/json",
                    success: function (results) {
                        if (results.success) {
                            new PNotify({
                                title: ':)',
                                text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                                type: 'success',
                                hide: true,
                                styling: 'bootstrap3',
                                delay: 3000,
                                animate: {
                                    animate: true,
                                    in_class: 'bounceInDown',
                                    out_class: 'bounceOutRight'
                                }
                            });
                            $('#observacionEdit,#fechaEdit,#valor1Edit,#valor2Edit,#valor3Edit').val('');
                            $('#proveedorEdit').select2('data', null);
                            $('#formEdit').bootstrapValidator('resetForm');
                            id = null;
                            generarTabla();
                            $('#confirmEdit').modal('hide');
                        } else {
                            new PNotify({
                                title: 'Error!',
                                text: results.msg,
                                type: 'danger',
                                hide: false,
                                styling: 'bootstrap3',
                                animation: 'slide'
                            });
                        }
                    }
                });
            });

        $('body').off('click', '.editarRegistro').on('click', '.editarRegistro', function () {
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = aData.id;
            $(this).parent().parent().find('td').css('background-color', 'yellow');
            $('#proveedorEdit').select2('val', aData.proveedorId);
            $('#observacionEdit').val(aData.observacion);
            $('#fechaEdit').val(aData.fecha);
            $('#valor1Edit').val(aData.valor1);
            $('#valor2Edit').val(aData.valor2);
            $('#valor3Edit').val(aData.valor3);

            if (aData.verificados == true)
                $('#btnVerificar').hide();
            else
                $('#btnVerificar').show();
        });
        $('#confirmEdit').on('show.bs.modal', function (e) {
            $('body').on({
                'mousewheel': function (e) {
                    if (e.target.id == 'el') return;
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        });


         $('body').off('click', '.deleteRegistro').on('click', '.deleteRegistro', function () {
             $.ajax({
                url: '@Url.Action("ProveedoresDelete")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Eliminar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                         generarTabla();
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                    id = null;
                    $('#confirmDelete').modal('hide');

                },
                type: "POST"
            });
        });

        $('body').off('click', '.verificar').on('click', '.verificar', function () {
            $.ajax({
                url: '@Url.Action("TarifasVerificar")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        $('#confirmEdit, #confirmDelete, #confirmVerificar').modal('hide');
                        id = null;
                        generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                },
                type: "POST"
            });
        });

        $('#confirmDelete, #confirmEdit,#confirmHistorico').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
        });

        function generarTablaHistorico(_id) {

            $('#dataTables-historico').dataTable({
                //"scrollX": false,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("TarifasHistoricasGrilla")',
                    "data": { id: _id },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "bSort": false,
                "autoWidth": true,
                "columns": [
                    {
                        "data": "fecha",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Fecha").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="precioVentaGrid">' + data + '</span>';
                        }
                    },
                    {
                        "sClass": 'textAlignRight',
                        "data": "valor1",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Costos").IdiPal_Texto) 1',
                        "render": function (data, type, full, meta) {
                            return '<span id="impuestoInternoGrid">' + data + '</span>';
                        }
                    },
                    {
                        "sClass": 'textAlignRight',
                        "data": "valor2",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Valor Mostrador").IdiPal_Texto) 2',
                        "render": function (data, type, full, meta) {
                            return '<span id="netoIVAGrid">' + data + '</span>';
                        }
                    },
                    {
                        "sClass": 'textAlignRight',
                        "data": "valor3",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tarifas - Otros").IdiPal_Texto) 3',
                        "render": function (data, type, full, meta) {
                            return '<span id="valorIVAGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "observacion",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="fechaVigenciaGrid">' + data + '</span>';
                        }
                    },
                ]
            });

            $('#dataTables-historico_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }
        $('#confirmHistorico').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
        });

        $('body').off('click', '.historico').on('click', '.historico', function () {
            $(this).parent().parent().find('td').css('background-color', 'yellow');
            $('#tituloSector').text($(this).parents('tr').find('#proveedorGrid').text());
            generarTablaHistorico(this.id);
        });

        generarTabla();
    });

</script>
