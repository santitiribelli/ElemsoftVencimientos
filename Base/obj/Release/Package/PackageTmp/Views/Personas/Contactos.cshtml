@using Entities
@if (ViewBag.Alta == true)
{
    <div class="row">
        <div class="col-lg-12">
            <button type="button" class="btn btn-info  btn-block" id="btnAgregarForm"><i class="fa fa-plus"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Agregar").IdiPal_Texto)</button>
        </div>
    </div>
    <form class="form-horizontal rowAlt" role="form" id="formPrincipal" style="display: none;">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Tipo").IdiPal_Texto)</label>
                                <select type="text" class="form-control input-sm" name="tipo" id="tipo">
                                    <option></option>
                                    @foreach (var item in BusinessLogic.ClasificadoresIdiomasAdmin.GetList("Contactos Tipos"))
                                    {
                                        <option value="@item.Clas_Id">@item.ClasIdi_Texto</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Codigo Pais").IdiPal_Texto)</label>
                                <input type="text" class="form-control input-sm" name="pais" id="pais" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Codigo Ciudad").IdiPal_Texto)</label>
                                <input type="text" class="form-control input-sm" name="ciudad" id="ciudad" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Telefono Numero").IdiPal_Texto)</label>
                                <input type="text" class="form-control input-sm" name="numero" id="numero" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Email").IdiPal_Texto)</label>
                                <input type="text" class="form-control input-sm" name="email" id="email" />
                            </div>
                        </div>
                    </div>

                    <div class="clearfix"></div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Clase").IdiPal_Texto)</label>
                                <select type="text" class="form-control input-sm" name="clase" id="clase">
                                    <option></option>
                                    @foreach (var item in BusinessLogic.ClasificadoresIdiomasAdmin.GetList("Contactos Clases"))
                                    {
                                        <option value="@item.Clas_Id">@item.ClasIdi_Texto</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label style="display: block;">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Principal").IdiPal_Texto)</label>
                                <input type="checkbox" name="principal" id="principal" data-on-color="success" data-off-color="danger" data-on-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - SI").IdiPal_Texto)" data-off-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - NO").IdiPal_Texto)" checked>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)</label>
                                <textarea rows="2" class="form-control input-sm" name="observacion" id="observacion"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right btn-Cont">
                    <button type="submit" class="btn btn-success btn-rounded" id="btnGuardar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>

                </div>
            </div>
        </div>
    </form>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="confirmEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)</h4>
            </div>
            <form class="form-horizontal" id="formEdit" method="post">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Tipo").IdiPal_Texto)</label>
                                    <select type="text" class="form-control input-sm" name="tipoEdit" id="tipoEdit">
                                        <option></option>
                                        @foreach (var item in BusinessLogic.ClasificadoresIdiomasAdmin.GetList("Contactos Tipos"))
                                        {
                                            <option value="@item.Clas_Id">@item.ClasIdi_Texto</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Codigo Pais").IdiPal_Texto)</label>
                                    <input type="text" class="form-control input-sm" name="paisEdit" id="paisEdit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Codigo Ciudad").IdiPal_Texto)</label>
                                    <input type="text" class="form-control input-sm" name="ciudadEdit" id="ciudadEdit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Telefono Numero").IdiPal_Texto)</label>
                                    <input type="text" class="form-control input-sm" name="numeroEdit" id="numeroEdit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Email").IdiPal_Texto)</label>
                                    <input type="text" class="form-control input-sm" name="emailEdit" id="emailEdit" />
                                </div>
                            </div>
                        </div>

                        <div class="clearfix"></div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Clase").IdiPal_Texto)</label>
                                    <select type="text" class="form-control input-sm" name="claseEdit" id="claseEdit">
                                        @foreach (var item in BusinessLogic.ClasificadoresAdmin.GetList("Contactos Clases").Where(x => x.Clas_Padre == null))
                                        {
                                            <option value="@item.Clas_Id">@item.Clas_Desc</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label style="display: block;">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Principal").IdiPal_Texto)</label>
                                    <input type="checkbox" name="principalEdit" id="principalEdit" data-on-color="success" data-off-color="danger" data-on-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - SI").IdiPal_Texto)" data-off-text="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - NO").IdiPal_Texto)" checked>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)</label>
                                    <textarea rows="2" class="form-control input-sm" name="observacionEdit" id="observacionEdit"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    @if (ViewBag.Alta == true)
                    {
                        <div class="pull-left btn-Cont">
                            <button type="button" class="btn btn-warning btn-rounded" id="btnVerificar" data-toggle="modal" data-target="#confirmVerificar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Verificar").IdiPal_Texto)</button>
                        </div>
                        <button type="submit" class="btn btn-primary btn-rounded" id="btnEditar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                        <button type="button" class="btn btn-danger btn-rounded borrarRegistro" title="Borrar" data-toggle="modal" data-target="#confirmDelete"><i class="fa fa-trash"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)</button>
                    }
                    <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmVerificar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                @*@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Verificar").IdiPal_Texto)*@
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Verificar").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <div class="modal-body">
                @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Confirmar Verificar").IdiPal_Texto)
            </div>
            <div class="modal-footer">
                @if (ViewBag.Alta == true)
                {
                    <button type="button" class="btn btn-primary btn-rounded verificar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                }
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Eliminar").IdiPal_Texto)</h4>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Cerrar</span></button>

            </div>
            <div class="modal-body">
                @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Confirmar Eliminar").IdiPal_Texto)
            </div>
            <div class="modal-footer">
                @if (ViewBag.Alta == true)
                {
                    <button type="button" class="btn btn-primary btn-rounded deleteRegistro"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                }
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id;
    $(function () {
        function generarTabla(){
            $('#dataTables-example').dataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("ContactosGrilla")',
                    "data": { id: $('#personaId').val() },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "autoWidth": true,
                "columns": [
                    {
                        "data": "clas",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Clase").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="clasGrid">' + data + '</span><input type="hidden" id="hiddenClase" value="' + full['clasId'] + '"/><input type="hidden" id="hiddenTipo" value="' + full['tipoId'] + '"/>';
                        }
                    },
                    {
                        "data": "principal",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Principal").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="principalGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "numeroCompleto",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Telefono Numero").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="numeroCompletoGrid">' + data + '</span><input type="hidden" id="hiddenPais" value="' + full['telefonoPais'] + '"/><input type="hidden" id="hiddenCiudad" value="' + full['telefonoCiudad'] + '"/><input type="hidden" id="hiddenTel" value="' + full['telefonoNumero'] + '"/>';
                        }
                    },
                     {
                        "data": "email",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Personas - Contactos - Email").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="emailGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "observacion",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Comunes - Campo - Observacion").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="observacionGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Acciones").IdiPal_Texto)',
                        "class": "claseAlign",
                        "render": function (data, type, full, meta) {

                            var algo = "";
                            if ('@ViewBag.Alta' == 'True')
                            {
                                algo += '<button type="button" class="btn ' + (full['verificados'] == true ? "btn-success" : "btn-warning") +  ' btn-xs editarRegistro" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmEdit"><span class="glyphicon glyphicon-pencil"></span></button>';
                            }
                            return algo;
                        }
                    }
                ],
            });

            $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

        $('#tipo').select2({});
        $('#clase').select2({});

        $('#confirmEdit').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
            if (id == null)
                generarTabla();
        });

        $('#tipoEdit').select2({});
        $('#claseEdit').select2({});

        $('body').off('click', '.editarRegistro').on('click', '.editarRegistro', function () {
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = this.id;
            $(this).parent().parent().find('td').css('background-color', 'yellow');
            $('#numeroEdit').val($(this).parents('tr').find('#hiddenTel').val());
            $('#ciudadEdit').val($(this).parents('tr').find('#hiddenCiudad').val());
            $('#paisEdit').val($(this).parents('tr').find('#hiddenPais').val());
            $('#emailEdit').val($(this).parents('tr').find('#emailGrid').text());
            $('#observacionEdit').val($(this).parents('tr').find('#observacionGrid').text());
            $('#tipoEdit').val($(this).parents('tr').find('#hiddenTipo').val()).trigger('change');
            $('#claseEdit').val($(this).parents('tr').find('#hiddenClase').val()).trigger('change');
            if ($(this).parents('tr').find('#principalGrid').text() == '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Control Switch - SI").IdiPal_Texto)')
                $("[name='principalEdit']").bootstrapSwitch('state', true, true);
            else
                $("[name='principalEdit']").bootstrapSwitch('state', false, true);
            if (aData.verificados == true)
                $('#btnVerificar').hide();
            else
                $('#btnVerificar').show();
        });

        $("[name='principalEdit']").bootstrapSwitch();
        $("[name='principalEdit']").bootstrapSwitch('state', false, true);


        $('#formEdit').bootstrapValidator({
            live: 'enabled',
            submitButtons: '#btnEditar',
            fields: {
                tipoEdit: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                claseEdit: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                numeroEdit: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                        callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipoEdit').select2('val') == "12")
                                     {
                                    if ($('#numeroEdit').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                ciudadEdit: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipoEdit').select2('val') == "12")
                                     {
                                    if ($('#ciudadEdit').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                paisEdit: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipoEdit').select2('val') == "12")
                                     {
                                    if ($('#paisEdit').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                emailEdit: {
                    validators: {
                        //notEmpty: {
                        //    message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        //},
                        emailAddress: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipoEdit').select2('val') == "10")
                                     {
                                    if ($('#emailEdit').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                observacionEdit: {
                    validators: {
                        //notEmpty: {
                        //    message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        //},
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipoEdit').select2('val') == "805")
                                     {
                                    if ($('#observacionEdit').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                }

            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            var sessionData = {
                "PerCon_Id": id,
                "Per_Id": $("#personaId").val(),
                "Clas_ClaseContacto_Id": $("#claseEdit").select2('val'),
                "Clas_TipoContacto_Id": $("#tipoEdit").select2('val'),
                "PerCon_Marca": $('[name="principalEdit"]').bootstrapSwitch('state'),
                "PerCon_TE_Pais": $("#paisEdit").val(),
                "PerCon_TE_Ciudad": $("#ciudadEdit").val(),
                "PerCon_TE_Numero": $("#numeroEdit").val(),
                "PerCon_Correo": $("#emailEdit").val(),
                "PerCon_Obs": $("#observacionEdit").val(),
            };
            $.ajax({
                url: '@Url.Action("Contactos")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        $("[name='principalEdit']").bootstrapSwitch('state', false, false);

                        $('#tipoEdit, #claseEdit').select2('data', null);
                        $('#numeroEdit,#ciudadEdit,#paisEdit,#emailEdit,#observacionEdit').val('');
                        $('#principalEdit').bootstrapSwitch('state', true, true);
                        $('#formEdit').bootstrapValidator('resetForm');
                        id = null;

                        $('#confirmEdit').modal('hide');
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $("[name='principal']").bootstrapSwitch();
        $("[name='principal']").bootstrapSwitch('state', false, true);

        $('#tipo').select2();

        $('#tipo').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('numero', 'NOT_VALIDATED', null).validateField('numero');
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('ciudad', 'NOT_VALIDATED', null).validateField('ciudad');
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('pais', 'NOT_VALIDATED', null).validateField('pais');
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('observacion', 'NOT_VALIDATED', null).validateField('observacion');
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('email', 'NOT_VALIDATED', null).validateField('email');
        });
          $('#numero').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('numero', 'NOT_VALIDATED', null).validateField('numero');
         });
        $('#ciudad').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('ciudad', 'NOT_VALIDATED', null).validateField('ciudad');
        });
        $('#pais').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('pais', 'NOT_VALIDATED', null).validateField('pais');
        });
        $('#email').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('email', 'NOT_VALIDATED', null).validateField('email');
        });

        $('#observacion').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('observacion', 'NOT_VALIDATED', null).validateField('observacion');
        });



         $('#numeroEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('numeroEdit', 'NOT_VALIDATED', null).validateField('numeroEdit');
         });
        $('#ciudadEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('ciudadEdit', 'NOT_VALIDATED', null).validateField('ciudadEdit');
        });
        $('#paisEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('paisEdit', 'NOT_VALIDATED', null).validateField('paisEdit');
        });
        $('#emailEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('emailEdit', 'NOT_VALIDATED', null).validateField('emailEdit');
        });
        $('#observacionEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('observacionEdit', 'NOT_VALIDATED', null).validateField('observacionEdit');
        });

        $('#tipoEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('numeroEdit', 'NOT_VALIDATED', null).validateField('numeroEdit');

            $('#formEdit').data('bootstrapValidator')
                .updateStatus('ciudadEdit', 'NOT_VALIDATED', null).validateField('ciudadEdit');

            $('#formEdit').data('bootstrapValidator')
                .updateStatus('paisEdit', 'NOT_VALIDATED', null).validateField('paisEdit');

            $('#formEdit').data('bootstrapValidator')
                .updateStatus('observacionEdit', 'NOT_VALIDATED', null).validateField('observacionEdit');
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('emailEdit', 'NOT_VALIDATED', null).validateField('emailEdit');
        });
        $('#clase').select2({placeholder: "seleccione una clase",});

        $('#formPrincipal').bootstrapValidator({
            live: 'enabled',
            submitButtons: '#btnGuardar',
            fields: {
                tipo: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                clase: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                numero: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                        callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipo').select2("val") == "12")
                                {
                                    if ($('#numero').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                ciudad: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipo').select2("val") == "12")
                                     {
                                    if ($('#ciudad').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                pais: {
                    validators: {
                        integer: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipo').select2("val") == "12")
                                     {
                                    if ($('#pais').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                email: {
                    validators: {
                        emailAddress: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                        },
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipo').select2("val") == "10")
                                     {
                                    if ($('#email').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                },
                observacion: {
                    validators: {
                        //notEmpty: {
                        //    message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        //},
                         callback: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)' + '<br />',
                            callback: function (value, validator) {
                                if ($('#tipo').select2("val") == "805")
                                     {
                                    if ($('#observacion').val() == "") {
                                        return false;
                                    }
                                    else {
                                        return true;
                                    }
                                }
                                else
                                    return true;
                            }
                        }
                    }
                }

            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            var sessionData = {
                //"PerCon_Id": id,
                "Per_Id": $("#personaId").val(),
                "Clas_ClaseContacto_Id": $("#clase").select2('val'),
                "Clas_TipoContacto_Id": $("#tipo").select2('val'),
                "PerCon_Marca": $('[name="principal"]').bootstrapSwitch('state'),
                "PerCon_TE_Pais": $("#pais").val(),
                "PerCon_TE_Ciudad": $("#ciudad").val(),
                "PerCon_TE_Numero": $("#numero").val(),
                "PerCon_Correo": $("#email").val(),
                "PerCon_Obs": $("#observacion").val(),
            };
            $.ajax({
                url: '@Url.Action("Contactos")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {

                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });


                        $('#tabContactos').removeClass('sinInfo text-info');
                        $('#tabContactos i').remove();
                        $("[name='principal']").bootstrapSwitch('state', false, false);
                        $('#tipo, #clase').select2('data', null);
                        $('#numero, #pais, #ciudad, #email, #observacion').val('');
                        $('#principal').bootstrapSwitch('state', true, true);
                        $('#formPrincipal').bootstrapValidator('resetForm');
                        generarTabla();
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

         $('body').off('click', '.verificar').on('click', '.verificar', function () {
            $.ajax({
                url: '@Url.Action("ContactosVerificar")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        $('#confirmEdit, #confirmDelete, #confirmVerificar').modal('hide');
                        id = null;
                        generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                },
                type: "POST"
            });
        });

        $('body').off('click', '.deleteRegistro').on('click', '.deleteRegistro', function () {
            $.ajax({
                url: '@Url.Action("ContactosDelete")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Eliminar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        $('#confirmEdit, #confirmDelete').modal('hide');
                        id = null;
                        generarTabla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: true,
                            delay: 3000,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                },
                type: "POST"
            });
        });

        generarTabla();
    });
</script>
