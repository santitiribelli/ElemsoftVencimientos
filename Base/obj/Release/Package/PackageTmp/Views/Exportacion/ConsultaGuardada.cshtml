@using GestionProcesos.Models
@model ExportacionConsultaModel
@{
    ViewBag.Title = "Consulta Guardada";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .buttons-excel {
        display: none !important;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">@Model.Nombre</h4>
    </div>
</div>
<input type="hidden" value="@Model.Id" name="expId" id="expId"/>
@if (Model.Filtros != null && Model.Filtros.Count > 0)
{
    <form class="form-horizontal rowAlt" role="form" id="formFiltros">
        <div class="panel panel-default">
            <div class="panel-body">
                @foreach (var item in Model.Filtros)
                {
                    if (item.Cam_Tipo == "Combo")
                    {
                        var algo = new Helpers().GetComboData(item.Cam_Query).Tables[0].Rows;
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">@item.Cam_Nom</label>
                                    <div class="col-lg-9">
                                        <select class="select form-control input-sm" style="width: 100%;" id="@item.Cam_NomInt" name="@item.Cam_NomInt">
                                            <option></option>
                                            @for (int i = 0; i < algo.Count; i++)
                                            {
                                                <option value="@algo[i]["Id"]">@algo[i]["Text"]</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                            $(function() {
                                $('#@item.Cam_NomInt').select2();
                                @*$('#formFiltros').bootstrapValidator('addField', '@item.Cam_NomInt', {
                                    validators: {
                                        notEmpty: {
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                                        }
                                    }
                                });*@
                            });
                        </script>
                    }
                    else if (item.Cam_Tipo == "Fecha")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">@item.Cam_Nom</label>
                                    <div class="col-lg-9">
                                        <input type="text" class="form-control input-sm datepicker" name="@item.Cam_NomInt" id="@item.Cam_NomInt" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                            $(function () {
                                $('#@item.Cam_NomInt').on("change", function () {
                                    $('#formFiltros').data('bootstrapValidator')
                                        .updateStatus('@item.Cam_NomInt', 'NOT_VALIDATED', null).validateField('@item.Cam_NomInt');
                                });

                                $('#formFiltros').bootstrapValidator('addField', '@item.Cam_NomInt', {
                                    validators: {
                                        notEmpty: {
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                                        },
                                        date: {
                                            format: 'DD/MM/YYYY',
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato invalido").IdiPal_Texto)'
                                        }
                                    }
                                });
                            });
                        </script>
                    }
                    else if (item.Cam_Tipo == "Numero")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">@item.Cam_Nom</label>
                                    <div class="col-lg-9">
                                        <input type="text" class="form-control input-sm" name="@item.Cam_NomInt" id="@item.Cam_NomInt" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                            $(function () {
                                $('#formFiltros').bootstrapValidator('addField', '@item.Cam_NomInt', {
                                    validators: {
                                        notEmpty: {
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                                        },
                                        numeric: {
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Solo Numeros").IdiPal_Texto)'
                                        }
                                    }
                                });
                            });
                        </script>
                    }
                    else if (item.Cam_Tipo == "Alfanumerico")
                    {
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="col-lg-3 control-label">@item.Cam_Nom</label>
                                    <div class="col-lg-9">
                                        <input type="text" class="form-control input-sm" name="@item.Cam_NomInt" id="@item.Cam_NomInt" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <script>
                            $(function () {
                                $('#formFiltros').bootstrapValidator('addField', '@item.Cam_NomInt', {
                                    validators: {
                                        notEmpty: {
                                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                                        }
                                    }
                                });
                            });
                        </script>
                    }
                }
                <div class="pull-right btn-Cont">
                    <button type="submit" class="btn btn-success" id="btnEjecutar">Ejecutar</button>
                </div>
            </div>
        </div>
        <script>
            $(function () {

                $('#formFiltros').bootstrapValidator({
                    submitButtons: '#btnEjecutar',
                    live: 'enabled'
                }).on('success.form.bv', function (e) {
                    e.preventDefault();
                    var form = $("#formFiltros").serialize();
                    $('#formFiltros').bootstrapValidator('resetForm');
                    $('#grilla').empty().load('@Url.Action("Grilla")', { form: form, id: $('#expId').val() });
                });
            });
        </script>
        <div id="grilla"></div>
    </form>
}
@if (Model.Query != null)
{
<div class="row">
    <div class="col-lg-10">
        <div class="panel panel-default">
            <div class="panel-heading">
                @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Exportaciones - Consulta - Resultado Query").IdiPal_Texto)
            </div>
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" width="100%">
                        <thead>
                            <tr>
                                @foreach (var item in Model.QueryResultado.Columns)
                                {
                                    <th>@item.ToString()</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 1; i < Model.QueryResultado.Rows.Count + 1; i++)
                            {
                                <tr class="odd gradeC">
                                    @for (int x = 0; x < Model.QueryResultado.Columns.Count; x++)
                                    {
                                        <td>@Model.QueryResultado.Rows[i - 1][x].ToString()</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @if (ViewBag.Exportar == true)
    {
        if (Model.TipoArchivo == "EXC")
        {
            <div class="col-lg-2">
                <div class="well">
                    <a class="btn btn-success btn-block" id="btnExcel" href="#"><i class="fa fa-file-excel-o"></i>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Exportaciones - Consulta - Exportar").IdiPal_Texto)</a>
                </div>
            </div>
        }
        else
        {
            <div class="col-lg-2">
                <div class="well">
                    <a class="btn btn-success btn-block" id="btnArchivoPlano" href="#"><i class="fa fa-file-excel-o"></i>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Exportaciones - Consulta - Exportar").IdiPal_Texto)</a>
                </div>
            </div>
        }
    }
</div>

<script>

    $(document).ready(function () {

        $('#btnExcel').on('click', function () {
            $('.buttons-excel').click();
            //window.location = '@Url.Action("Export")/' + $('#expId').val();
        });

        $('#btnArchivoPlano').on('click', function () {

            window.location = '@Url.Action("CrearArchivoPlano")/' + $('#expId').val();
        });
    });
    $(function () {

        $('#dataTables-example').dataTable({
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: '@Model.Nombre - @DateTime.Now.ToString("dd/MM/yyyy")',
                }
            ],
            "scrollX":true,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                "sInfoPostFix": "",
                "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                "oPaginate": {
                    "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                    "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                    "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                    "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "order": []
        });

        $('#dataTables-example_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
    });
</script>
}