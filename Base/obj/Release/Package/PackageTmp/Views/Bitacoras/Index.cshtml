@{
    // ViewBag.Title = "index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Titulo").IdiPal_Texto)</h4>
    </div>
</div>
<div class="row" id="Encabezado">
    <div class="col-lg-12">
        <div class="well well-sm overflowWell">
            <input type="hidden" value="@ViewBag.BuqViaCliSer_Id" name="buqViaCliSerId" id="buqViaCliSerId" />
            <div class="row">
                <div class="col-md-12">
                    <h5 class="text-info">
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Productos - Tipo y Nombre").IdiPal_Texto):</small><span>@ViewBag.Tipo , @ViewBag.Nombre</span>
                        <br />
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Buques Viajes - Titulo").IdiPal_Texto):</small><span>@ViewBag.Codigo</span>
                        <br />
                        <small>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Clientes - Titulo").IdiPal_Texto):</small><span>@ViewBag.NombreCompleto</span>
                        <br />
                    </h5>
                    <a class="btn btn-info btn-rounded volver" href="@Url.Action("Index","BuqueViajeCliente",new {tab = "Servicios"})&id=@ViewBag.BuqViaCLi_Id"><i class="fa fa-caret-left"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Volver").IdiPal_Texto)</a>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row" id="advertencia">
    <div class="col-lg-12">
        <div class="alert alert-warning">
            <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Alerta Leido").IdiPal_Texto)</label>
        </div>
    </div>
</div>
<div class="row" id="Mensajes">
    <div class="col-lg-6">
        <form class="form-horizontal rowAlt" role="form" id="formMensajes">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Tipo").IdiPal_Texto)</label>
                                    <input type="text" class="form-control input-sm" id="tipo" name="tipo" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Mensaje").IdiPal_Texto)</label>
                                    <textarea rows="3" class="input-sm form-control" id="observacion" name="observacion"></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="pull-right btn-Cont">
                        <button type="submit" class="btn btn-success btn-rounded" id="btnGuardar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div class="col-lg-6">
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-bordered table-hover" id="dataTables-example"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<div class="modal fade" id="confirmEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4>Rece ptores</h4>
                @*<h4 class="modal-title">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)</h4>*@
            </div>
            <div class="modal-body rowAlt">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTablesReceptores-example" style="width: 100%;"></table>
                </div>
                <div class="clearfix"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Cancelar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id;
    var mensajes;
    var backColor;
    $(function () {
        $('#tipo').select2({ data: [] });

        function cargarMensajes() {
            $.ajax({
                url: '@Url.Action("GetListMensajes")',
                data: { id: $('#buqViaCliSerId').val() },
                dataType: 'json',
                type: 'GET',
                async: true,
                success: function (data) {
                    mensajes = data.msg;
                    $('#tipo').select2('data', null);
                    $('#tipo').select2('destroy').select2({
                        data: data.msg,
                        @*placeholder: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Titulo").IdiPal_Texto)'*@
                    });
                }
            });
        }
        cargarMensajes();
        $('#tipo').on("change", function () {
            var filtrado = $.grep(mensajes, function (v) {
                return v.id.toString() === $("#tipo").select2('val');
            })

            var sessionData = {
                "servicioId": $("#buqViaCliSerId").val(),
                "bitacoraConfiguracionId": $("#tipo").select2('val'),
            };
            $.ajax({
                url: '@Url.Action("MarcarLeidos")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {

                        @*new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });*@
                        var seleccionado = $("#tipo").select2('val');
                        $('#tipo').select2('data', null);
                        cargarMensajes();
                        generarTabla(filtrado[0].mensajes);
                        $('#tipo').val(seleccionado);
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('#confirmEdit').on('hidden.bs.modal', function (e) {
            $('#' + id).parent().parent().find('td').css('background-color', backColor);
        });

        $('body').off('click', '.editarRegistro').on('click', '.editarRegistro', function () {
            backColor = $(this).parents('td').css('background-color');
            var table = $('#dataTables-example').DataTable();
            var aData = table.row($(this).parents('tr')).data();
            id = aData.id;
            $(this).parent().parent().find('td').css('background-color', 'LightBlue');
            generarTablaReceptores(aData.receptores);
        });

         $('#formMensajes').bootstrapValidator({
            submitButtons: '#btnGuardar',
            fields: {
                observacion: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
                tipo: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            var sessionData = {
                "servicioId": $("#buqViaCliSerId").val(),
                "mensaje": $("#observacion").val(),
                "bitacoraConfiguracionId": $("#tipo").select2('val'),
            };
            $.ajax({
                url: '@Url.Action("Enviar")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: ':)',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });
                        var seleccionado = $("#tipo").select2('val');
                        $('#tipo').select2('data', null);
                        $.ajax({
                            url: '@Url.Action("GetListMensajes")',
                            data: { id: $('#buqViaCliSerId').val() },
                            dataType: 'json',
                            type: 'GET',
                            async: true,
                            success: function (data) {
                                mensajes = data.msg;
                                $('#tipo').select2('data', null);
                                $('#tipo').select2('destroy').select2({
                                    data: data.msg,
                                    @*placeholder: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Tripulantes - Titulo").IdiPal_Texto)'*@
                                });
                            }
                        }).done(function () {
                            var filtrado = $.grep(mensajes, function (v) {
                                return v.id.toString() === seleccionado;
                            });
                            generarTabla(filtrado[0].mensajes);
                        });

                        $('#formMensajes').bootstrapValidator('resetForm');
                        $('#tipo').val(seleccionado);
                        $('#observacion').val('');

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });
    });

    /** Datatables **/

    function generarTabla(f) {
        var oTable = $('#dataTables-example').dataTable({
            "stateSave": true,
            "scrollX": true,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                "sInfoPostFix": "",
                "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                "oPaginate": {
                    "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                    "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                    "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                    "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "destroy": true,
            "data": f,
            "ordering": false,
            "autoWidth": false,
            "columns": [
                        {
                        "data": "mensaje",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Mensaje").IdiPal_Texto)',
                        "render": function (data, type, full, meta) {
                            return '<span id="mensajeGrid">' + data + '</span>';
                            }
                        },
                        {
                            "data": "fechaHora",
                            "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Fecha y Hora").IdiPal_Texto)',
                            "render": function (data, type, full, meta) {
                                return '<span id="fechaHoraGrid">' + data + '</span>';
                            }
                        },
                        {
                            "data": "persona",
                            "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Persona").IdiPal_Texto)',
                            "render": function (data, type, full, meta) {
                                return '<span id="personaGrid">' + data + '</span>';
                            }
                        },
                        {
                        "data": "",
                        "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Acciones").IdiPal_Texto)',
                        "class": "claseAlign",
                        "render": function (data, type, full, meta) {
                            var algo = "";
                            algo += '<button type="button" class="btn btn-success btn-xs editarRegistro" title="@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Receptores").IdiPal_Texto)" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmEdit"><span class="fa fa-users"></span></button>';

                            return algo;
                            }
                        }
            ],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                //console.log(aData.leido);
                if (aData.leido == false) {
                    $('td', nRow).css('background-color', 'yellow');
                }
                //else {
                //    $('td', nRow).css('background-color', 'lightblue');
                //}
            },

            });

                $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
    }
    function generarTablaReceptores(f) {
      var oTable =  $('#dataTablesReceptores-example').dataTable({
          "responsive": true,
          "stateSave": true,
            //"scrollX": true,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                "sInfoPostFix": "",
                "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                "oPaginate": {
                    "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                    "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                    "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                    "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "destroy": true,
            "data": f,
            "ordering": false,
            "autoWidth": true,
            "columns": [
                        {
                            "data": "fechaHora",
                            "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Fecha y Hora").IdiPal_Texto)',
                            "render": function (data, type, full, meta) {
                            return '<span id="fechaHoraGrid">' + data + '</span>';
                            }
                        },
                        {
                            "data": "persona",
                            "title": '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Bitacoras - Persona").IdiPal_Texto)',
                            "render": function (data, type, full, meta) {
                                return '<span id="personaGrid">' + data + '</span>';
                            }
                        },
            ],
            });

                $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
            }
</script>
