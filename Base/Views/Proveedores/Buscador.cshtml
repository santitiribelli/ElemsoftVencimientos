@{
    ViewBag.Title = "Proveedores";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="@(ViewBag.Alta == true ? "col-lg-10": "col-lg-12")">
        <h4 class="page-header">Proveedores</h4>
    </div>
    @if (ViewBag.Alta == true)
    {
        <div class="col-lg-2">
            <button type="button" class="btn btn-info  btn-block" onclick="location.href='@Url.Action("Index",new{id=(int?)null})'"><i class="fa fa-plus"></i>Agregar</button>
        </div>
    }
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" style="min-width: 100%;">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(function () {
        
            var oTable = $('#dataTables-example').dataTable({
                "stateSave":true,
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Paginado").IdiPal_Texto)",
                    "sZeroRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscar sin resultados").IdiPal_Texto)",
                    "sEmptyTable": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - No hay datos").IdiPal_Texto)",
                    "sInfo": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info").IdiPal_Texto)",
                    "sInfoEmpty": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info sin datos").IdiPal_Texto)",
                    "sInfoFiltered": "(@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Info Filtro").IdiPal_Texto))",
                    "sInfoPostFix": "",
                    "sSearch": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Buscador").IdiPal_Texto): ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Cargando").IdiPal_Texto)",
                    "oPaginate": {
                        "sFirst": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Primero").IdiPal_Texto)",
                        "sLast": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Ultimo").IdiPal_Texto)",
                        "sNext": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Siguiente").IdiPal_Texto)",
                        "sPrevious": "@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Grilla - Anterior").IdiPal_Texto)"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("BuscadorGrilla")',
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "autoWidth": true,
                "columns": [
                    {
                        "width": '50px',
                        "data": "codigo",
                        "title": 'Código',
                        "render": function (data, type, full, meta) {
                            return '<span id="codigoGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "persona",
                        "title": 'Persona',
                        "render": function(data, type, full, meta) {
                            return '<a class="linkFamiliar" href="/Personas/Index/' + full['personaId'] + '" id="parienteGrid">' + data + '</a>';
                        }
                    },
                    {
                        "width": '175px',
                        "data": "rubro",
                        "title": 'Rubro',
                        "render": function (data, type, full, meta) {
                            return '<span id="rubroGrid">' + data + '</span><input type="hidden" id="hiddenRubro" value="' + full['rubroId'] + '"/>';
                        }
                    },
                    {
                        "sClass": "textAlignCenter",
                        "width": '60px',
                        "data": "cuentaCorriente",
                        "title": 'Cta. Cte.',
                        "render": function (data, type, full, meta) {
                            return '<span id="cuentaCorrienteGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "observacion",
                        "title": 'Observación',
                        "render": function(data, type, full, meta) {
                            return '<span id="observacionGrid">' + data + '</span>';
                        }
                    },
                    {
                        "width": '100px',
                        "data": "estado",
                        "title": 'Estado',
                        "render": function(data, type, full, meta) {
                            return '<span id="estadoGrid">' + data + '</span><input type="hidden" id="hiddenEstado" value="' + full['estadoId'] + '"/>';
                        }
                    },
                ],
                "fnInitComplete": function (oSettings) {
                    //On click in row, redirect to page Product of ID
                    $(oTable.fnGetNodes()).click(function () {
                        var iPos = oTable.fnGetPosition(this);
                        var aData = oSettings.aoData[iPos]._aData;
                        //redirect
                        document.location.href = "@Url.Action("Index","Proveedores")/?id=" + aData.id;
                    });
                },
            });

        $('#dataTables-example_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
    });
</script>