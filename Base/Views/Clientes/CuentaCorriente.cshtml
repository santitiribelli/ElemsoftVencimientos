<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="row">
                <div class="col-md-12" style="text-align: center;">
                    <h1>Saldo: <label id="labelSaldo"></label> </h1>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" style="min-width: 100%;">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog" style="width: 90%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                    <h4 class="modal-title">Pagos Realizados</h4>
                </div>
                <div class="modal-body">
                    <div class="modal-body rowAlt">
                        <form class="form-horizontal" id="formEdit" method="post" style="display: none;">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Forma de Pago</label>
                                            <select class="form-control input-sm" style="width: 100%;" id="formaPago" name="formaPago">
                                                <option></option>
                                                @foreach (var item in BusinessLogic.ClasificadoresAdmin.GetList("Formas de Pago"))
                                                {
                                                    <option value="@item.Clas_Id">@item.Clas_Desc</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Fecha</label>
                                            <input type="text" class="form-control input-sm bfh-phone datepicker" autocomplete="off" id="formaPagoFecha" name="formaPagoFecha" data-format="dd/dd/dddd" value="@DateTime.Now.ToString("dd/MM/yyyy")" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Importe</label>
                                            <input type="text" class="form-control input-sm numeros" id="formaPagoImporte" name="formaPagoImporte" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Observación</label>
                                            <textarea class="form-control input-sm" maxlength="200" rows="3" id="formaPagoDesc" name="formaPagoDesc"></textarea>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Cuenta Bancaria</label>
                                            <select class="form-control input-sm" style="width: 100%;" id="cuentaBancaria" name="cuentaBancaria">
                                                <option></option>
                                                @foreach (var item in BusinessLogic.CuentasBancariasAdmin.GetList())
                                                {
                                                    <option value="@item.CueBan_Id">@(item.Clasificadores.Clas_Abrev + " - " + item.CueBan_Den)</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <div class="col-lg-12">
                                            <label>Cheque N°</label>
                                            <input type="text" class="form-control input-sm" id="cheque" name="cheque" readonly="readonly" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="pull-right btn-Cont">
                                <button type="submit" class="btn btn-info btn-rounded" id="btnAgregar"><i class="fa fa-plus"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Agregar").IdiPal_Texto)</button>
                            </div>
                            <div class="clearfix"></div>
                        </form>
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover" id="dataTables-formasPagos" style="min-width: 100%;">
                                            <tfoot>
                                                <tr>
                                                    <th style="text-align: right;">Monto a Cancelar: <span id="montoCancelar">0.00</span></th>
                                                    <th style="text-align: right;">Total Cancelado: <span id="montoCancelado">0.00</span></th>
                                                    <th style="text-align: right;">Saldo Restante: <span id="montoSaldo">0.00</span></th>
                                                    <th></th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
                </div>
            </div>
        </div>
    </div>
<script>
    var id;
    var renglon;
    var montoCancelado;
    $(function() {
        $('#dataTables-example').dataTable({
            "scrollX": true,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar: ",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            },
            "destroy": true,
            "ajax": {
                "type": "GET",
                "url": '@Url.Action("CuentaCorrienteGrilla")',
                "data": { id: $('#clienteId').val() },
                "dataType": 'json',
                "dataSrc": ""
            },
            "ordering": false,
            "autoWidth": true,
            "columns": [
                {
                    "data": "fecha",
                    "title": 'Fecha',
                    "render": function(data, type, full, meta) {
                        return '<span id="fechaGrid">' + data + '</span>';
                    }
                },
                {
                    "data": "remito",
                    "title": 'Remito',
                    "render": function (data, type, full, meta) {
                        return '<span id="remitoGrid">' + data + '</span>';
                    }
                },
                {
                    "data": "comprobante",
                    "title": 'Comprobante',
                    "render": function(data, type, full, meta) {
                        return '<span id="comprobanteGrid">' + data + '</span>';
                    }
                },
                {
                    "sClass": "textAlignRight",
                    "data": "importe",
                    "title": 'Importe',
                    "render": function(data, type, full, meta) {
                        return '<span id="importeGrid">' + data + '</span>';
                    }
                },
                {
                    "sClass": "textAlignRight",
                    "data": "pagado",
                    "title": 'Pagado',
                    "render": function (data, type, full, meta) {
                        return '<span id="pagadoGrid">' + data + '</span>';
                    }
                },
                {
                    "sClass": "textAlignRight",
                    "data": "saldo",
                    "title": 'Saldo',
                    "render": function (data, type, full, meta) {
                        return '<span id="saldoGrid">' + data + '</span>';
                    }
                },
                {
                    "data": "",
                    "title": 'Acciones',
                    "class": "claseAlign",
                    "render": function(data, type, full, meta) {
                        var algo = "";
                        algo += '<button type="button" class="btn btn-success btn-xs pagos" title="Ver Pagos realizados" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmEdit"><span class="glyphicon glyphicon-list"></span></button>';
                        algo +=
                            '<button type="button" class="btn btn-info btn-xs" title="Ir al registro de Venta" id="' +
                            full['id'] +
                            '" onclick="location.href=\'@Url.Action("Directa", "Ventas")/?id=' +
                            full['id'] +
                            '\'"><span class="glyphicon glyphicon-step-forward"></span></button>';
                        return algo;
                    }
                }
            ],
            "initComplete": function (row, data, start, end, display) {
                var montoCancelado = 0;
                //var api = this.api(), data;
                for (var i = 0; i < data.length; i++) {
                    montoCancelado = parseFloat(montoCancelado) + parseCurrency(data[i].saldo);
                    console.log(montoCancelado);
                }
                $('#labelSaldo').text(numeral(montoCancelado).format('0,0.00'));
            }
        });

        $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');

        function generarTablaPagos(cajaId) {
            $('#dataTables-formasPagos').dataTable({
                "stateSave": true,
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar: ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("_FormasPagoGrilla","Ventas")',
                    "data": { id: cajaId },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "autoWidth": true,
                "paging": false,
                "searching": false,
                "columns": [
                    {
                        "data": "formaPago",
                        "title": 'Forma de Pago',
                        "render": function (data, type, full, meta) {
                            return "<span id='formaPagoGrid'>" + data + "</span>";
                        }
                    },
                    {
                        "data": "fecha",
                        "title": 'Fecha',
                        "render": function (data, type, full, meta) {
                            return "<span id='detalleGrid'>" + data + "</span>";
                        }
                    },
                    {
                        "sClass": "textAlignRight",
                        "data": "importe",
                        "title": 'Importe',
                        "render": function (data, type, full, meta) {
                            return "<span class='numero' id='importeGrid'>" + data + "</span>";
                        }
                    },
                    {
                        "data": "detalle",
                        "title": 'Detalle',
                        "render": function (data, type, full, meta) {
                            return "<span id='subtotalGrid'>" + data + "</span>";
                        }
                    },
                ],
                "initComplete": function (row, data, start, end, display) {
                    var api = this.api(), data;
                    montoCancelado = 0;
                    for (var i = 0; i < data.length; i++) {
                        montoCancelado = parseFloat(montoCancelado) + parseCurrency(data[i].importe);
                    }
                    $('#montoCancelado').text(numeral(montoCancelado).format('0,0.00'));
                    $('#montoSaldo').text(numeral(parseCurrency($('#montoCancelar').text()) - parseCurrency($('#montoCancelado').text())).format('0,0.00'));
                }
            });
            $('#dataTables-pagos_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

        $('body').on('click', '.pagos', function (e) {
            id = this.id;
            renglon = $(this);
            //montoCancelado = $(this).parents('tr').find('#pagadoGrid').text();
            $('#montoCancelar').text($(this).parents('tr').find('#importeGrid').text());
            $('#montoCancelado').text($(this).parents('tr').find('#pagadoGrid').text());
            $('#montoSaldo').text($(this).parents('tr').find('#saldoGrid').text());
            generarTablaPagos(this.id);
        });

        $('#formaPago').select2();
        $('#formaPago').on("change", function () {
            if ($('#formaPago').select2('data').text == "CHEQUE") {
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('formaPagoImporte', false, 'callback');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cheque', true, 'notEmpty');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cuentaBancaria', true, 'notEmpty');
                $('#cuentaBancaria').select2('readonly', false);
                $('#cheque').removeAttr('readonly');
            } else if ($('#formaPago').select2('data').text == "TRANSFERENCIA") {
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('formaPagoImporte', false, 'callback');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cheque', false, 'notEmpty');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cuentaBancaria', true, 'notEmpty');
                $('#cheque').val('').attr('readonly', 'readonly');
                $('#cuentaBancaria').select2('readonly', false);
            } else {
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('formaPagoImporte', true, 'callback');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cheque', false, 'notEmpty');
                $('#formEdit').data('bootstrapValidator').enableFieldValidators('cuentaBancaria', false, 'notEmpty');
                $('#cuentaBancaria').select2('data', null);
                $('#cuentaBancaria').select2('readonly', true);
                $('#cheque').val('').attr('readonly', 'readonly');
            }
        });

        $('#cuentaBancaria').select2({ allowClear: false });
        $('#cuentaBancaria').select2('readonly', true);

        $('#formaPagoFecha').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('formaPagoFecha', 'NOT_VALIDATED', null)
                .validateField('formaPagoFecha');
        });

        $('#formEdit').bootstrapValidator({
            live: 'enabled',
            submitButtons: '#btnAgregar',
            fields: {
                formaPago: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                cuentaBancaria: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                cheque: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                formaPagoImporte: {
                    validators: {
                        regexp: {
                            regexp: /^\d+(,\d{3})*(\.\d*)?$/,
                            message: 'solo números'
                        },
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
                formaPagoFecha: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        date: {
                            format: 'DD/MM/YYYY',
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                        }
                    }
                },
            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            montoCancelado = montoCancelado + parseCurrency($('#formaPagoImporte').val());
            if (parseCurrency(montoCancelado) == parseCurrency($('#montoCancelar').text())) {
                $('#btnAgregar').hide();
            }
            if (parseCurrency(montoCancelado) > parseCurrency($('#montoCancelar').text())) {
                montoCancelado = montoCancelado - parseCurrency($('#formaPagoImporte').val());
                new PNotify({
                    title: 'Atención!',
                    text: 'El monto pagado supera al de la compra',
                    type: 'warning',
                    hide: true,
                    styling: 'bootstrap3',
                    delay: 3000,
                    animate: {
                        animate: true,
                        in_class: 'bounceInDown',
                        out_class: 'bounceOutRight'
                    }
                });
                return false;
            }

            var sessionData = {
                "Ven_Id": id,
                "Clas_ForPag_Id": $("#formaPago").select2("val"),
                "VenForPag_Imp": parseCurrency($("#formaPagoImporte").val()),
                "VenForPag_Fec": $("#formaPagoFecha").val(),
                "VenForPag_Desc": $('#formaPagoDesc').val(),
                //"CueBan_Id": $("#cuentaBancaria").select2("val"),
                //cheque
            };

            $.ajax({
                url: '@Url.Action("_FormasPago","Ventas")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: 'Pago generado exitosamente',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        //actualizo los datos en la grilla principal
                        renglon.parents('tr').find('#pagadoGrid').text(numeral(parseCurrency(renglon.parents('tr').find('#pagadoGrid').text()) + parseCurrency($('#formaPagoImporte').val())).format('0,0.00'));
                        renglon.parents('tr').find('#saldoGrid').text(numeral(parseCurrency(renglon.parents('tr').find('#importeGrid').text()) - parseCurrency(renglon.parents('tr').find('#pagadoGrid').text())).format('0,0.00'));

                        //actualizo el campo total en saldo
                        $('#labelSaldo').text(numeral(parseCurrency($('#labelSaldo').text()) - parseCurrency($('#formaPagoImporte').val())).format('0,0.00'));

                        $('#formaPago,#cuentaBancaria').select2('data', null);
                        $('#formaPagoImporte,#formaPagoDesc,#cheque').val('');
                        $('#formEdit').bootstrapValidator('resetForm');
                        generarTablaPagos(id);

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });
    });

</script>
