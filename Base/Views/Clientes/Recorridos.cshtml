@{
    ViewBag.Title = "Recorridos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery-sortable.js")"></script>
<style>
    body.dragging, body.dragging * {
  cursor: move !important;
}

.dragged {
  position: absolute;
  opacity: 0.5;
  z-index: 2000;
}


.sorted_table tr.placeholder {
  display: block;
  background: red;
  position: relative;
  margin: 0;
  padding: 0;
  border: none; 

}

  .sorted_table tr.placeholder:before {
    content: "";
    position: absolute;
    width: 0;
    height: 0;
    border: 5px solid transparent;
    border-left-color: red;
    margin-top: -5px;
    left: -5px;
    border-right: none; 

  }
  .hidden {
      display: none;
  }
</style>
<div class="row">
    <div class="col-lg-12">
        <h4 class="page-header">Recorridos</h4>
    </div>
</div>
<form class="form-horizontal rowAlt" role="form" id="formPrincipal">
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="col-lg-12">
                            <label>Vendedor</label>
                            <select class="form-control input-sm" style="width: 100%;" id="vendedor" name="vendedor">
                                @foreach (var item in BusinessLogic.EmpleadosAdmin.GetList())
                                {
                                    <option value="@item.Emp_Id">@item.Personas.NombreCompleto</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <div class="col-lg-12">
                            <label>Día</label>
                            <select class="form-control input-sm" style="width: 100%;" id="dia" name="dia">
                                <option></option>
                                <option value="1">Lunes</option>
                                <option value="2">Martes</option>
                                <option value="3">Miercoles</option>
                                <option value="4">Jueves</option>
                                <option value="5">Viernes</option>
                                <option value="6">Sabado</option>
                                <option value="0">Domingo</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="col-lg-12">
                            <label>Cliente</label>
                            <input type="text" class="form-control input-sm" name="cliente" id="cliente" />
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="col-lg-12">
                            <label>Antes de</label>
                            <input type="text" class="form-control input-sm" name="antes" id="antes" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="pull-right btn-Cont">
                <button type="submit" class="btn btn-success btn-rounded" id="btnGuardar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
            </div>
        </div>
    </div>
</form>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover sorted_table" id="dataTables-example" style="min-width: 100%;">
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmDelete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Desasignar</h4>
            </div>
            <div class="modal-body">
                ¿Confirma que desea sacar  al cliente del recorrido?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary delete">Confirmar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmGuardar" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title" id="myModalLabel">Confirmar guardado</h4>
            </div>
            <div class="modal-body">
                El cliente seleccionado ya existe en el recorrido del día. En caso de confirmar se borrará donde se encuentra ubicado y se asignará en la nueva ubicación.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary guardarInfo">Confirmar</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancelar</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id;
    var backupItem;
    $(function() {

        function generarTablaClientes() {
            $('#dataTables-example').dataTable({
                dom: 'fBlrtip',
                buttons: [
                    {
                        extend: 'excel',
                        text: 'Excel',
                        messageTop: 'Vendedor ' + $('#vendedor').select2('data').text,
                        title: 'Recorrido: ' + $('#dia').select2('data').text,
                    }
                ],
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar: ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("ClientesVisitasGrilla")',
                    "data": { vendedorId: $('#vendedor').select2('val'), dia: $('#dia').select2('val') },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "bSort": false,
                "autoWidth": true,
                "paging":false,
                "columns": [
                    {
                        "data": "domicilio",
                        "title": 'Domicilio',
                        "render": function(data, type, full, meta) {
                            return '<span id="domicilioGrid">' + data + '</span><input type="hidden" id="hiddenId" value="' + full['id'] + '"/><input type="hidden" id="hiddenOrden" value="' + full['orden'] + '"/>';
                        }
                    },
                    {
                        "data": "nombre",
                        "title": 'Cliente',
                        "render": function(data, type, full, meta) {
                            return '<a class="linkFamiliar" href="@Url.Action("Index", "Clientes")/' + full['clienteId'] + '" id="personaGrid">' + data + '</a><input type="hidden" id="hiddenSector" value="' + full['id'] + '"/>';
                        }
                    },
                    {
                        "data": "",
                        "title": 'Ordenar',
                        "class": "claseAlign",
                        "render": function (data, type, full, meta) {
                            var algo = '';

                            if ('@ViewBag.Alta' == 'True') {
                                if (full['primero'] == false)
                                    algo += '<button type="button" class="btn btn-success btn-xs subirCliente" title="Subir Cliente" id="' + full['id'] + '"><span class="glyphicon glyphicon-chevron-up"></span></button>';
                                if (full['ultimo'] == false)
                                    algo += '<button type="button" class="btn btn-success btn-xs bajarCliente" title="Bajar Cliente" id="' + full['id'] + '"><span class="glyphicon glyphicon-chevron-down"></span></button>';
                            }
                            return algo;
                        }
                    },
                    {
                        "data": "",
                        "title": 'Acciones',
                        "class": "claseAlign",
                        "render": function(data, type, full, meta) {
                            var algo = '';

                            if ('@ViewBag.Alta' == 'True') {
                                algo += '<button type="button" class="btn btn-success btn-xs preDelete" title="Eliminar" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmDelete"><span class="glyphicon glyphicon-trash"></span></button>';
                            }
                            return algo;
                        }
                    },
                ],
                initComplete: function () {
                    $('.dt-buttons').attr('style', 'padding-left:10px;').find('button').removeClass().addClass('btn btn-xs btn-info');

                    // Sortable rows
                    @*$('.sorted_table').sortable({
                        containerSelector: 'table',
                        itemPath: '> tbody',
                        itemSelector: 'tr',
                        placeholder: '<tr class="placeholder"/>',
                        onDrop: function ($item, container, _super, event) {
                            $item.removeClass(container.group.options.draggedClass).removeAttr("style");
                            $("body").removeClass(container.group.options.bodyClass);

                            $.ajax({
                                url: '@Url.Action("Arrastrar")',
                                type: 'POST',
                                data: JSON.stringify({
                                    movidoId: $item.find('#hiddenId').val(),
                                    movidoOrden: $item.find('#hiddenOrden').val(),
                                    quedoAbajoId: $item.next().find('#hiddenId').val(),
                                    quedoAbajoOrden: $item.next().find('#hiddenOrden').val(),
                                }),
                                contentType: "application/json",
                                success: function (results) {
                                    if (results.success) {
                                        new PNotify({
                                            title: 'Exito!',
                                            text: 'Cliente reordenado exitosamente',
                                            type: 'success',
                                            hide: true,
                                            styling: 'bootstrap3',
                                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                                        });
                                    } else {
                                        new PNotify({
                                            title: 'Error!',
                                            text: results.msg,
                                            type: 'danger',
                                            hide: false,
                                            styling: 'bootstrap3',
                                            animation: 'slide'
                                        });
                                        generarTablaClientes();
                                    }
                                }
                            });
                        }
                    });*@
                }
        });

        $('#dataTables-clientes_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

        $('#dia,#vendedor').select2();
        $('#dia,#vendedor').on("change", function () {
            listaAntesDe();
            generarTablaClientes();
            listaClientes();
        });

        $('#cliente,#antes').select2({readonly:true,data:[]});
        $('#cliente').on("change", function() {
            $('#formPrincipal').data('bootstrapValidator').updateStatus('cliente', 'NOT_VALIDATED', null).validateField('cliente');
        });
        function listaClientes() {
            $.ajax({
                url: '@Url.Action("GetClientesParaRecorrido", "Clientes")',
                dataType: 'json',
                data: { vendedorId: $('#vendedor').select2('val'), dia: $('#dia').select2('val') },
                type: 'POST',
                async: false,
                success: function (data) {
                    $('#cliente').select2('destroy').select2({
                        data: data
                    });
                }
            });
        }

        function listaAntesDe() {
                $.ajax({
                    url: '@Url.Action("ClientesByDiaVendedor")',
                type: 'POST',
                data: { vendedorId: $('#vendedor').select2('val'), dia: $('#dia').select2('val') },
                success: function (results2) {
                    if (results2.success) {
                        $('#antes').select2('destroy').select2({
                            allowClear: true,
                            placeholder: 'Ante de',
                            data: results2.msg
                        });
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results2.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        }

        $('body').off('click', '.subirCliente').on('click', '.subirCliente', function () {
            $.ajax({
                url: '@Url.Action("VisitasReordenar")',
                type: 'POST',
                data: JSON.stringify({ id: this.id, accion: 'S' }),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: 'Cliente reordenado exitosamente',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });

                        generarTablaClientes();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('body').off('click', '.bajarCliente').on('click', '.bajarCliente', function () {
            $.ajax({
                url: '@Url.Action("VisitasReordenar")',
                type: 'POST',
                data: JSON.stringify({ id: this.id, accion: 'B' }),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: 'Cliente reordenado exitosamente',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });

                        generarTablaClientes();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('#formPrincipal').bootstrapValidator({
            live: 'enabled',
            submitButtons: '#btnGuardar',
            fields: {
                dia: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
                cliente: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        }
                    }
                },
            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();

            if ($("#antes").select2('val') != '' && $("#cliente").select2('val') == $("#antes").select2('data').clienteId) {
                new PNotify({
                    title: 'Atención!',
                    text: 'El cliente seleccionado no puede ir antes de el mismo',
                    type: 'warning',
                    hide: true,
                    styling: 'bootstrap3',
                    delay: 3000,
                    animate: {
                        animate: true,
                        in_class: 'bounceInDown',
                        out_class: 'bounceOutRight'
                    }
                });
                return false;
            }

            if ($("#cliente").select2('data').yaExiste == true) {
                $('#confirmGuardar').modal('show');
            } else {
                guardarInfo();
            }
        });

        function guardarInfo() {
            var sessionData = {
                "Cli_Id": $("#cliente").select2('val'),
                "CliVi_Dia": $("#dia").select2('val'),
            };

            var parametro = { "model": sessionData, "despuesId": $("#antes").select2('val') };

            $.ajax({
                url: '@Url.Action("Visitas")',
                type: 'POST',
                data: JSON.stringify(parametro),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: 'Dato guardado exitosamente',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000,
                            animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });
                        actualizarPantalla();

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        }

        $('body').on('click', 'button.guardarInfo', function () {
            guardarInfo();
            $('#confirmGuardar').modal('hide');
        });

        $('body').off('click', 'button.delete').on('click', 'button.delete', function () {
            $.ajax({
                url: '@Url.Action("VisitasDelete")',
                data: { id: id },
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Eliminar").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 2000, animate: { animate: true, in_class: 'bounceInDown', out_class: 'bounceOutRight' }
                        });

                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                    id = null;
                    $('#confirmDelete').modal('hide');

                },
                type: "POST"
            });
        });

        $('#confirmDelete').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
            if (id == null) {
                actualizarPantalla();
            }
        });

        function actualizarPantalla() {
            listaAntesDe();
            //$('#antes').select2('destroy').select2({
            //    data: []
            //});
            listaClientes();
            generarTablaClientes();
        }



        //// Sortable column heads
        //var oldIndex;
        //$('.sorted_head tr').sortable({
        //    containerSelector: 'tr',
        //    itemSelector: 'th',
        //    placeholder: '<th class="placeholder"/>',
        //    vertical: false,
        //    onDragStart: function ($item, container, _super) {
        //        oldIndex = $item.index();
        //        $item.appendTo($item.parent());
        //        _super($item, container);
        //    },
        //    onDrop: function ($item, container, _super) {
        //        var field,
        //            newIndex = $item.index();

        //        if (newIndex != oldIndex) {
        //            $item.closest('table').find('tbody tr').each(function (i, row) {
        //                row = $(row);
        //                if (newIndex < oldIndex) {
        //                    row.children().eq(newIndex).before(row.children()[oldIndex]);
        //                } else if (newIndex > oldIndex) {
        //                    row.children().eq(newIndex).after(row.children()[oldIndex]);
        //                }
        //            });
        //        }

        //        _super($item, container);
        //    }
        //});
    });

</script>
