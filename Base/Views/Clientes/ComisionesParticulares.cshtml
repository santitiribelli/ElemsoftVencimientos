@if (ViewBag.Alta == true)
{
    <div class="row">
        <div class="col-lg-12">
            <button type="button" class="btn btn-info  btn-block" id="btnAgregarForm"><i class="fa fa-plus"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Agregar").IdiPal_Texto)</button>
        </div>
    </div>
    <form class="form-horizontal rowAlt" role="form" id="formPrincipal" style="display: none;">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>Producto</label>
                                <input type="text" style="width: 100% !important" class="form-control input-sm" id="producto" name="producto" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>Vendedor</label>
                                <select class="form-control input-sm" style="width: 100%;" id="empleado" name="empleado">
                                    <option></option>
                                    @foreach (var item in BusinessLogic.EmpleadosAdmin.GetList())
                                    {
                                        <option value="@item.Emp_Id">@(item.Personas.NombreCompleto)</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>F. Desde</label>
                                <input type="text" class="form-control input-sm bfh-phone datepicker" autocomplete="off" id="fechaDesde" name="fechaDesde" data-format="dd/dd/dddd" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <div class="col-lg-12">
                                <label>F. Hasta</label>
                                <input type="text" class="form-control input-sm bfh-phone datepicker" autocomplete="off" id="fechaHasta" name="fechaHasta" data-format="dd/dd/dddd" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="pull-right btn-Cont">
                    <button type="submit" class="btn btn-success btn-rounded" id="btnGuardar"><i class="fa fa-check"></i> @(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton - Guardar").IdiPal_Texto)</button>
                </div>
            </div>
        </div>
    </form>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example" style="min-width: 100%;"></table>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="confirmEdit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" style="width: 90%;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Boton/Titulo - Editar").IdiPal_Texto)</h4>
            </div>
            <form class="form-horizontal" id="formEdit" method="post">
                <div class="modal-body rowAlt">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>Producto</label>
                                    <input type="text" style="width: 100% !important" class="form-control input-sm" id="productoEdit" name="productoEdit" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>Vendedor</label>
                                    <select class="form-control input-sm" style="width: 100%;" id="empleadoEdit" name="empleadoEdit">
                                        <option></option>
                                        @foreach (var item in BusinessLogic.EmpleadosAdmin.GetList())
                                        {
                                            <option value="@item.Emp_Id">@(item.Personas.NombreCompleto)</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>F. Desde</label>
                                    <input type="text" class="form-control input-sm bfh-phone datepicker" autocomplete="off" id="fechaDesdeEdit" name="fechaDesdeEdit" data-format="dd/dd/dddd" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <div class="col-lg-12">
                                    <label>F. Hasta</label>
                                    <input type="text" class="form-control input-sm bfh-phone datepicker" autocomplete="off" id="fechaHastaEdit" name="fechaHastaEdit" data-format="dd/dd/dddd" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
                <div class="modal-footer">
                    @if (ViewBag.Alta == true)
                    {
                        <button type="submit" class="btn btn-primary btn-rounded" id="btnEditar"><i class="fa fa-check"></i> Confirmar</button>
                    }
                    <button type="button" class="btn btn-default btn-rounded" data-dismiss="modal"><i class="fa fa-times"></i> Cancelar</button>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    var id;
    $(function () {
        bootstrapHelper();
        function generarTabla() {
            $('#dataTables-example').dataTable({
                "scrollX": true,
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar: ",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                "destroy": true,
                "ajax": {
                    "type": "GET",
                    "url": '@Url.Action("ComisionesParticularesGrilla")',
                    "data": { id: $('#clienteId').val() },
                    "dataType": 'json',
                    "dataSrc": ""
                },
                "ordering": false,
                "autoWidth": true,
                "columns": [
                    {
                        "data": "producto",
                        "title": 'Producto',
                        "render": function (data, type, full, meta) {
                            return '<a class="linkFamiliar" href="/Productos/Index/' + full['productoId'] + '" id="parienteGrid">' + data + '</a><input type="hidden" id="hiddenProducto" value="' + full['productoId'] + '"/>';
                        }
                    },
                    {
                        "data": "empleado",
                        "title": 'Empleado',
                        "render": function (data, type, full, meta) {
                            return '<a class="linkFamiliar" href="/Empleados/Index/' + full['empleadoId'] + '" id="parienteGrid">' + data + '</a><input type="hidden" id="hiddenEmpleado" value="' + full['empleadoId'] + '"/>';
                        }
                    },
                {
                    "data": "fechaDesde",
                    "title": 'F. Desde',
                    "render": function (data, type, full, meta) {
                        return '<span id="fechaDesdeGrid">' + data + '</span>';
                    }
                },
                    {
                        "data": "fechaHasta",
                        "title": 'F. Hasta',
                        "render": function (data, type, full, meta) {
                            return '<span id="fechaHastaGrid">' + data + '</span>';
                        }
                    },
                    {
                        "data": "",
                        "title": 'Acciones',
                        "class": "claseAlign",
                        "render": function (data, type, full, meta) {
                            var algo = "";
                            if ('@ViewBag.Alta' == 'True' && full['fechaHasta'] == '')
                                algo += '<button type="button" class="btn btn-success btn-xs editarRegistro" title="Editar" id="' + full['id'] + '" data-toggle="modal" data-target="#confirmEdit"><span class="glyphicon glyphicon-pencil"></span></button>';
                            return algo;
                        }
                    }
                ],
            });

                $('.dataTables_wrapper .row:first .col-sm-6:first-child').css('float', 'right');
        }

        $.ajax({
            url: '@Url.Action("GetProductoVentaProd", "Productos")',
            dataType: 'json',
            data: { q: '' },
            type: 'POST',
            async: false,
            success: function (data) {
                $('#productoEdit,#producto').select2({
                    data: data
                });
            }
        });

        $('#empleado,#empleadoEdit').select2();

        $('#fechaDesde').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('fechaDesde', 'NOT_VALIDATED', null).validateField('fechaDesde');

            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('fechaHasta', 'NOT_VALIDATED', null).validateField('fechaHasta');
        });

        $('#fechaHasta').on("change", function () {
            $('#formPrincipal').data('bootstrapValidator')
                .updateStatus('fechaHasta', 'NOT_VALIDATED', null).validateField('fechaHasta');
        });

        $.fn.bootstrapValidator.validators.dates = {
            validate: function (validator, $field, options) {
                if ($('#fechaHasta').val() == '')
                    return true;
                var d1 = $('#fechaDesde').val();
                var d2 = $('#fechaHasta').val();
                d1 = d1.split('/');
                d2 = d2.split('/');
                d1 = new Date(d1.pop(), d1.pop() - 1, d1.pop());
                d2 = new Date(d2.pop(), d2.pop() - 1, d2.pop());

                return d2 >= d1;
            }
        };

        $('#formPrincipal').bootstrapValidator({
            submitButtons: '#btnGuardar',
            fields: {
                empleado: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
                producto: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                    }
                },
                fechaDesde: {
                    validators: {
                        notEmpty: {
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                        },
                        date: {
                            format: 'DD/MM/YYYY',
                            message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                        }
                    }
                },
                fechaHasta: {
                    validators: {
                        dates: {
                            message: 'La fecha hasta debe ser superior a la fecha desde.'
                        },
                        date: {
                            max:'@DateTime.Now.ToString("dd/MM/yyyy")',
                            format: 'DD/MM/YYYY',
                            message: "Formato incorrecto o la fecha debe ser menor o igual a la actual"
                        }
                    }
                }
            }
        }).on('success.form.bv', function (e) {
            e.preventDefault();
            var sessionData = {
                "Cli_Id": $("#clienteId").val(),
                "Prod_Id": $("#producto").select2('val'),
                "Emp_Prev_Id": $("#empleado").select2('val'),
                "CliProdPrev_FechaDesde": $("#fechaDesde").val(),
                "CliProdPrev_FechaHasta": $("#fechaHasta").val(),
            };
            $.ajax({
                url: '@Url.Action("ComisionesParticulares")',
                type: 'POST',
                data: JSON.stringify(sessionData),
                contentType: "application/json",
                success: function (results) {
                    if (results.success) {
                        new PNotify({
                            title: 'Exito!',
                            text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Nuevo").IdiPal_Texto)',
                            type: 'success',
                            hide: true,
                            styling: 'bootstrap3',
                            delay: 3000,
                            animate: {
                                animate: true,
                                in_class: 'bounceInDown',
                                out_class: 'bounceOutRight'
                            }
                        });

                        $('#tabComisiones').removeClass('sinInfo text-info');
                        $('#tabComisiones i').remove();

                        $('#fechaDesde,#fechaHasta').datepicker('update', '');
                        $('#producto,#empleado').select2('data', null);
                        $('#formPrincipal').bootstrapValidator('resetForm');

                        generarTabla();
                    } else {
                        new PNotify({
                            title: 'Error!',
                            text: results.msg,
                            type: 'danger',
                            hide: false,
                            styling: 'bootstrap3',
                            animation: 'slide'
                        });
                    }
                }
            });
        });

        $('#fechaDesdeEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('fechaDesdeEdit', 'NOT_VALIDATED', null).validateField('fechaDesdeEdit');

            $('#formEdit').data('bootstrapValidator')
            .updateStatus('fechaHastaEdit', 'NOT_VALIDATED', null).validateField('fechaHastaEdit');
        });

        $('#fechaHastaEdit').on("change", function () {
            $('#formEdit').data('bootstrapValidator')
                .updateStatus('fechaHastaEdit', 'NOT_VALIDATED', null).validateField('fechaHastaEdit');
        });

        $.fn.bootstrapValidator.validators.dates = {
            validate: function (validator, $field, options) {
                if ($('#fechaHastaEdit').val() == '')
                    return true;
                var d1 = $('#fechaDesdeEdit').val();
                var d2 = $('#fechaHastaEdit').val();
                d1 = d1.split('/');
                d2 = d2.split('/');
                d1 = new Date(d1.pop(), d1.pop() - 1, d1.pop());
                d2 = new Date(d2.pop(), d2.pop() - 1, d2.pop());

                return d2 >= d1;
            }
        };

        $('#formEdit')
            .bootstrapValidator({
                submitButtons: '#btnEditar',
                fields: {
                    empleadoEdit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                        }
                    },
                    productoEdit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                        }
                    },
                    fechaDesdeEdit: {
                        validators: {
                            notEmpty: {
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Campo Requerido").IdiPal_Texto)'
                            },
                            date: {
                                format: 'DD/MM/YYYY',
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                            }
                        }
                    },
                    fechaHastaEdit: {
                        validators: {
                            dates: {
                                message: 'La fecha hasta debe ser superior a la fecha desde.'
                            },
                            date: {
                                format: 'DD/MM/YYYY',
                                message: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "Validacion - Formato incorrecto").IdiPal_Texto)'
                            }
                        }
                    }
                }
            }).on('success.form.bv', function (e) {
                e.preventDefault();
                var sessionData = {
                    "CliProdPrev_Id": id,
                    "Cli_Id": $("#clienteId").val(),
                    "Prod_Id": $("#productoEdit").select2('val'),
                    "Emp_Prev_Id": $("#empleadoEdit").select2('val'),
                    "CliProdPrev_FechaDesde": $("#fechaDesdeEdit").val(),
                    "CliProdPrev_FechaHasta": $("#fechaHastaEdit").val(),
                };
                $.ajax({
                    url: '@Url.Action("ComisionesParticulares")',
                    type: 'POST',
                    data: JSON.stringify(sessionData),
                    contentType: "application/json",
                    success: function (results) {
                        if (results.success) {
                            new PNotify({
                                title: 'Exito!',
                                text: '@(((List<Entities.IdiomasPalabras>)Session["Idiomas"]).FirstOrDefault(x => x.IdiPal_Clave == "General - Texto - Actualizar").IdiPal_Texto)',
                                type: 'success',
                                hide: true,
                                styling: 'bootstrap3',
                                delay: 3000,
                                animate: {
                                    animate: true,
                                    in_class: 'bounceInDown',
                                    out_class: 'bounceOutRight'
                                }
                            });
                            $('#fechaDesdeEdit,#fechaHastaEdit').datepicker('update', '');
                            $('#productoEdit,#empleadoEdit').select2('data', null);
                            $('#formEdit').bootstrapValidator('resetForm');
                            id = null;

                            $('#confirmEdit').modal('hide');
                        } else {
                            new PNotify({
                                title: 'Error!',
                                text: results.msg,
                                type: 'danger',
                                hide: false,
                                styling: 'bootstrap3',
                                animation: 'slide'
                            });
                        }
                    }
                });
            });

        $('body').off('click', '.editarRegistro').on('click', '.editarRegistro', function () {
            id = this.id;
            $(this).parent().parent().find('td').css('background-color', 'yellow');
            $('#productoEdit').select2('val', $(this).parents('tr').find('#hiddenProducto').val());
            $('#empleadoEdit').select2('val', $(this).parents('tr').find('#hiddenEmpleado').val());
            $('#fechaDesdeEdit').val($(this).parents('tr').find('#fechaDesdeGrid').text());
            $('#fechaHastaEdit').val($(this).parents('tr').find('#fechaHastaGrid').text());
        });
        $('#confirmEdit').on('show.bs.modal', function (e) {
            $('body').on({
                'mousewheel': function (e) {
                    if (e.target.id == 'el') return;
                    e.preventDefault();
                    e.stopPropagation();
                }
            });
        });

        $('#confirmEdit').on('hidden.bs.modal', function (e) {
            $('td').css('background-color', '');
            if (id == null)
                generarTabla();
        });

        generarTabla();
    });

</script>
